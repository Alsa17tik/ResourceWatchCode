1) Create a symlink between ResourceWatchCode .env file and project env files


from_folder="/Users/nathansuberi/Documents/GitHub/ResourceWatchCode/static-data-connectors"

from_folder="/Users/nathansuberi/Documents/GitHub/ResourceWatchCode/nrt-connector-templates"
exclude="/Users/nathansuberi/Documents/GitHub/ResourceWatchCode/nrt-connector-templates/nrt_raster_tif_structure"

from_folder="/Users/nathansuberi/Documents/GitHub/nrt-scripts/"
env_file="/Users/nathansuberi/Desktop/WRI_Programming/cred/.env"
credentials_file="/Users/nathansuberi/Desktop/WRI_Programming/cred/service_account_credentials.json"
nlp_creds="/Users/nathansuberi/Desktop/WRI_Programming/cred/.climatewatch.env"
netrc_file = "/Users/nathansuberi/Desktop/WRI_Programming/cred/.netrc"
find $from_folder -type d -maxdepth 1 -not -path "*/.ipy*" -not -path $from_folder | while read dname; do
  echo $dname
  cp $credentials_file $dname/credentials.json
  ln -s $env_file $dname/.env
  ln -s $nlp_creds $dname/.climatewatch.env
done


re='^-?[0-9]+([.][0-9]+)?$'
for line in $(aws s3 ls wri-public-data/resourcewatch/raster/soc_073_gridded_gdp/)
do
if [[ ${line: -3} =~ $re ]]
then
  aws s3 rm s3://wri-public-data/resourcewatch/raster/soc_073_gridded_gdp/$line
fi
done


# For a single symlink

env_file="/Users/nathansuberi/Desktop/WRI_Programming/cred/.env"
ln -s $env_file '/Users/nathansuberi/Documents/GitHub/ResourceWatchCode/static-data-connectors/soc_073_gridded_gdp/.env'
~~~

2) Notes on using dirname and basename

from_folder="/Users/nathansuberi/Desktop/Code Portfolio/ResourceWatchCode/nrt-scripts/"
find $from_folder -type d -maxdepth 1 -not -path "*/.ipy*" -not -path $from_folder | while read dname; do
  echo $dname
  echo $(dirname $dname)
  echo $(basename $dname)
  echo $(basename "$(dirname $dname)")
done

~~~

3) Clean up docker images
docker rm $(docker ps -a -q)
docker rmi $(docker images -q)
